[{"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\index.js":"1","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\reportWebVitals.js":"2","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\App.js":"3","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\NavB.js":"4","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\config.js":"5","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\TodoList.js":"6","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\AddForm.js":"7","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\TodoDetails.js":"8","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\EditForm.js":"9","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\SignIn.js":"10","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\SignUp.js":"11","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\ChatBot.js":"12","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\CheckoutForm.js":"13"},{"size":590,"mtime":1607423347407,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":4907,"mtime":1607794831308,"results":"17","hashOfConfig":"15"},{"size":1211,"mtime":1607795354256,"results":"18","hashOfConfig":"15"},{"size":50,"mtime":1607425172424,"results":"19","hashOfConfig":"15"},{"size":558,"mtime":1607710676267,"results":"20","hashOfConfig":"15"},{"size":1554,"mtime":1607795059191,"results":"21","hashOfConfig":"15"},{"size":2301,"mtime":1607793646337,"results":"22","hashOfConfig":"15"},{"size":2379,"mtime":1607793562961,"results":"23","hashOfConfig":"15"},{"size":993,"mtime":1607776540616,"results":"24","hashOfConfig":"15"},{"size":1227,"mtime":1607771629233,"results":"25","hashOfConfig":"15"},{"size":747,"mtime":1607694793101,"results":"26","hashOfConfig":"15"},{"size":3372,"mtime":1607766272406,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"84iwtn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\index.js",[],["61","62"],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\reportWebVitals.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\App.js",["63","64"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport {API_URL} from './config.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport NavB from './components/NavB';\nimport TodoList from './components/TodoList.js';\nimport AddForm from './components/AddForm';\nimport TodoDetails from './components/TodoDetails.js';\nimport EditForm from './components/EditForm';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\n\n\n\nfunction App(props) {\n\n  let [todos,setTodos]=useState([])\n  let [loggedInUser,setUser]=useState( null)\n\n  useEffect(()=>{\n    axios.get(`${API_URL}/todos`)\n      .then((res)=>{\n        setTodos(todos=res.data)\n      })\n      if(!loggedInUser){\n      axios.get(`${API_URL}/user`,{withCredentials: true})\n      .then((res)=>{\n        setUser(loggedInUser=res.data)\n      })}\n  },[])\n\n  const handleSubmit=(e)=>{\n    e.preventDefault()\n    const {name,description,image} = e.currentTarget\n    let uploadData = new FormData()\n    uploadData.append('imageUrl', image.files[0])\n\n    const handleCreate =(response)=>{\n      axios.post(`${API_URL}/create`, {\n        name: name.value,\n        description: description.value,\n        completed: false,\n        image: response.data.image\n      },{withCredentials: true})\n        .then((res)=>{\n          let newTodo = res.data\n          let todosClone= JSON.parse(JSON.stringify(todos))\n          todosClone.unshift(newTodo)\n          setTodos (todos=todosClone)\n          props.history.push(\"/\")\n        }) \n    }\n\n    if(image.files[0] !== undefined){  \n    axios.post(`${API_URL}/upload`, uploadData)\n      .then((response)=>{\n       handleCreate(response)\n      })\n    }\n    else{\n      axios.post(`${API_URL}/create`, {\n        name: name.value,\n        description: description.value,\n        completed: false,\n      },{withCredentials: true})\n        .then((res)=>{\n          let newTodo = res.data\n          let todosClone= JSON.parse(JSON.stringify(todos))\n          todosClone.unshift(newTodo)\n          setTodos (todos=todosClone)\n          props.history.push(\"/\")\n        }) \n    }\n  }\n\n  const handleDelete =(id)=>{\n    axios.delete(`${API_URL}/todos/${id}`, {withCredentials: true})\n    .then(()=>{\n      let filterTodos = todos.filter((todo)=>{\n        return todo._id !== id\n      })\n      setTodos(todos=filterTodos)\n    })\n    props.history.push(\"/\")\n  }\n\n  const handleEdit=(updatedTodo)=>{\n    axios.patch(`${API_URL}/todos/${updatedTodo._id}`,{\n      name: updatedTodo.name,\n      description: updatedTodo.description,\n      completed: updatedTodo.completed\n    },{withCredentials:true})\n    .then(()=>{\n      let clonedTodos = todos.map((todo)=>{\n        if(todo._id === updatedTodo._id){\n          todo = updatedTodo\n        }\n        return todo\n      })\n      setTodos(todos=clonedTodos)\n    })\n    props.history.push(\"/\")\n  }\n\n  const handleLogOut =(e) =>{\n    axios.post(`${API_URL}/logout`,{}, {withCredentials: true})\n    .then(()=>{\n      setUser (loggedInUser=null)\n      props.history.push(\"/\")\n    })\n  }\n\n  const handleSignIn =(e) =>{\n    e.preventDefault();\n    const{email,password}=e.currentTarget;\n    axios.post(`${API_URL}/signin`,{\n      email: email.value,\n      password: password.value}, {withCredentials: true})\n    .then((res)=>{\n      console.log(res)\n      setUser(loggedInUser=res.data)\n      props.history.push(\"/\")\n    })\n  }\n\n  const handleSignUp =(e) =>{\n    e.preventDefault();\n    const{username,email,password}=e.currentTarget;\n    axios.post(`${API_URL}/signup`,{\n      username: username.value,\n      email: email.value,\n      password: password.value}, {withCredentials: true})\n    .then((res)=>{\n      console.log(res)\n      setUser(loggedInUser=res.data)\n      props.history.push(\"/\")\n    })\n  }\n\n  return (\n    <div>\n      <NavB loggedInUser={loggedInUser} onLogOut={handleLogOut}/>\n      <Switch>\n        <Route exact path=\"/\" render={()=>{ \n          return <TodoList todos={todos}/>\n        }}/>\n        <Route path=\"/create-todo\" render={(routeProps)=>{\n          return <AddForm loggedInUser={loggedInUser} onSubmit={handleSubmit} {...routeProps} />\n        }}/>\n        <Route exact path=\"/todo/:id\" render={(routeProps)=>{\n          return <TodoDetails loggedInUser={loggedInUser} todos={todos} onDelete={handleDelete} {...routeProps}/>\n        }}/>\n         <Route path=\"/todo/:id/edit\" render={(routeProps)=>{\n          return <EditForm loggedInUser={loggedInUser} onEdit={handleEdit} {...routeProps}/>\n        }}/>\n          <Route path=\"/sign-in\" render={(routeProps)=>{\n          return <SignIn onSignIn={handleSignIn} {...routeProps}/>\n        }}/>\n          <Route path=\"/sign-up\" render={(routeProps)=>{\n          return <SignUp onSignUp={handleSignUp} {...routeProps}/>\n        }}/>\n    \n      </Switch>\n    </div>\n  )\n}\n\nexport default withRouter(App)","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\NavB.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\config.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\TodoList.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\AddForm.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\TodoDetails.js",["65","66"],"import React, {useState,useEffect} from 'react'\r\nimport{ListGroup, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {API_URL} from '../config.js';\r\nimport {Link,Redirect} from 'react-router-dom'\r\nimport ChatBot from './ChatBot.js';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default function TodoDetails(props) {\r\n\r\n    let [todo,setTodo]=useState()\r\n\r\n    \r\nuseEffect(()=>{\r\n    let id = props.match.params.id\r\n    axios.get(`${API_URL}/todos/${id}`,{withCredentials: true})\r\n      .then((res)=>{\r\n        setTodo(todo=res.data)\r\n      })\r\n  },[])\r\n\r\n  let BtnStyle={\r\n    margin: '10px'\r\n  }\r\n\r\n  let WrapperStyle={\r\n    margin: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  }\r\n\r\n  const promise = loadStripe(\"pk_test_51HJbtpE4vQDsVVOPjHyCIW6uvTjygcAO4vVY1RC8AszQGwo8Jgw3gWeXvXbHHSor8ZPoucYMb5twLjxKa4Z0e6rB00R1XsNgbV\");\r\n\r\n  let items=[\r\n    {\r\n      name:'pepo',\r\n      price: 12\r\n    },\r\n    {\r\n      name:'pepote',\r\n      price: 10\r\n    },\r\n    {\r\n      name:'pepota',\r\n      price: 10\r\n    }\r\n  ]\r\n\r\n    if(!props.loggedInUser){\r\n      return (<Redirect to=\"/sign-in\"/>)\r\n    }\r\n    return (\r\n        <div>\r\n        { todo ?\r\n        <div> \r\n            <ChatBot/>\r\n            <Elements stripe={promise}>\r\n                <CheckoutForm items={items}/>\r\n            </Elements>\r\n            <ListGroup>\r\n                <ListGroup.Item>Name: <br/> {todo.name}</ListGroup.Item>\r\n                { todo.image && <ListGroup.Item><img style={{width: '200px', height: '200px'}} src={todo.image}/></ListGroup.Item>}\r\n                <ListGroup.Item>Description : <br/>{todo.description}</ListGroup.Item>\r\n                <ListGroup.Item>Status :{todo.completed? <p>Done</p> : <p>Not Done</p>}</ListGroup.Item>\r\n            </ListGroup>\r\n            <br></br>\r\n            <div style={WrapperStyle}>\r\n            <Link to={`/todo/${todo._id}/edit`}><Button style={BtnStyle}>Edit</Button></Link>\r\n            <Button style={BtnStyle} onClick={()=>props.onDelete(todo._id)}>Delete</Button>\r\n            </div>\r\n        </div> :\r\n        <h1>Loading...</h1>\r\n        }\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\EditForm.js",["67"],"import React, {useState,useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {API_URL} from '../config.js';\r\n\r\n\r\nexport default function EditForm(props) {\r\n\r\n    let [todo,setTodo]=useState({})\r\n\r\n    \r\n    useEffect(()=>{\r\n        let id = props.match.params.id\r\n        axios.get(`${API_URL}/todos/${id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            setTodo(todo=res.data)\r\n          })\r\n      },[])\r\n\r\n    let BtnStyle={\r\n        margin: '10px'\r\n      }\r\n\r\n    let handleNameChange = (e) =>{\r\n        let updatedTodo = JSON.parse(JSON.stringify(todo))\r\n        updatedTodo.name = e.currentTarget.value\r\n        setTodo (todo = updatedTodo)\r\n    }\r\n\r\n    let handleDescriptionChange = (e) =>{\r\n        let updatedTodo = JSON.parse(JSON.stringify(todo))\r\n        updatedTodo.description = e.currentTarget.value\r\n        setTodo (todo = updatedTodo)\r\n    }\r\n    \r\n    let handleCompleted = ()=>{\r\n        let updatedTodo = JSON.parse(JSON.stringify(todo))\r\n        updatedTodo.completed = true\r\n        setTodo (todo=updatedTodo)\r\n    }\r\n\r\n    console.log(props)\r\n    if(!props.loggedInUser){\r\n        return <Redirect to=\"/sign-in\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            <Form onSubmit={()=>props.onEdit(todo)}>\r\n                <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>Todo Name</Form.Label>\r\n                    <Form.Control name='name' type=\"text\" onChange={handleNameChange} value={todo.name} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicDescription\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control name='description' type=\"text\" onChange={handleDescriptionChange} value={todo.description} />\r\n                    <Form.Text className=\"text-muted\" >\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Button onClick={handleCompleted} >Completed</Button>\r\n                </Form.Group>\r\n                \r\n\r\n                <Button style={BtnStyle} variant=\"primary\" type=\"submit\">\r\n                Edit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\SignIn.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\SignUp.js",[],"C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\ChatBot.js",["68"],"import React, { Component } from 'react';\r\n\r\n\r\nclass ChatBot extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount(){\r\n    (function(d, m){\r\n      var kommunicateSettings = {\"appId\":process.env.REACT_APP_CHATBOT_KEY,\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n      var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n      s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n      var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n      window.kommunicate = m; m._globals = kommunicateSettings;\r\n    })(document, window.kommunicate || {});\r\n  }\r\nrender() {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\nexport default ChatBot;","C:\\Users\\Gunner\\Desktop\\react practice\\ClientServerTemplate\\TemplateClientside\\src\\components\\CheckoutForm.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CardElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport {API_URL} from '../config'\r\n\r\nexport default function CheckoutForm(props) {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  \r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    \r\n    window\r\n      .fetch(`${API_URL}/create-payment-intent`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({items: props.items})\r\n      })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setClientSecret(data.clientSecret);\r\n      });\r\n  }, []);\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\"\r\n        }\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n  const handleSubmit = async ev => {\r\n    ev.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      receipt_email: email,\r\n      payment_method: {\r\n        card: elements.getElement(CardElement)\r\n      }\r\n    });\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  };\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Enter email address\"\r\n      />\r\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\r\n      <button\r\n        disabled={processing || disabled || succeeded}\r\n        id=\"submit\"\r\n      >\r\n        <span id=\"button-text\">\r\n          {processing ? (\r\n            <div className=\"spinner\" id=\"spinner\"></div>\r\n          ) : (\r\n            \"Pay\"\r\n          )}\r\n        </span>\r\n      </button>\r\n      {/* Show any error that happens when processing the payment */}\r\n      {error && (\r\n        <div className=\"card-error\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      {/* Show a success message upon completion */}\r\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n        Payment succeeded, see the result in your\r\n        <a\r\n          href={`https://dashboard.stripe.com/test/payments`}\r\n        >\r\n          {\" \"}\r\n          Stripe dashboard.\r\n        </a> Refresh the page to pay again.\r\n      </p>\r\n    </form>\r\n  );\r\n}",["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":24,"column":24,"nodeType":"78","endLine":24,"endColumn":32},{"ruleId":"76","severity":1,"message":"79","line":29,"column":30,"nodeType":"78","endLine":29,"endColumn":38},{"ruleId":"76","severity":1,"message":"80","line":22,"column":22,"nodeType":"78","endLine":22,"endColumn":30},{"ruleId":"81","severity":1,"message":"82","line":67,"column":49,"nodeType":"83","endLine":67,"endColumn":114},{"ruleId":"76","severity":1,"message":"80","line":17,"column":26,"nodeType":"78","endLine":17,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":6,"column":3,"nodeType":"86","messageId":"87","endLine":8,"endColumn":4},{"ruleId":"76","severity":1,"message":"88","line":37,"column":6,"nodeType":"89","endLine":37,"endColumn":8,"suggestions":"90"},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","Assignments to the 'todos' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'loggedInUser' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'todo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has a missing dependency: 'props.items'. Either include it or remove the dependency array.","ArrayExpression",["95"],["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [props.items]",{"range":"98","text":"99"},[1057,1059],"[props.items]"]